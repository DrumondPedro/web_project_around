!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var r=function(){return t=function t(e,n){var r=e.name,o=e.link,i=e.likes,u=e._id,c=e.owner,a=n.config,l=n.renderer,s=n.liker,f=n.disliker,p=n.excluder,y=n.deletePopup,m=n.userId;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=r,this._link=o,this._cardId=u,this._ownerId=c._id,this._likes=i,this._config=a,this._renderer=l,this._liker=s,this._disliker=f,this._excluder=p,this._deletePopup=y,this._userId=m},(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._config.templateSelector).content.querySelector(this._config.cardSelector).cloneNode(!0)}},{key:"_createConsts",value:function(){this._element=this._getTemplate(),this._cardName=this._element.querySelector(this._config.cardNameSelector),this._cardImage=this._element.querySelector(this._config.cardImageSelector),this._likeButton=this._element.querySelector(this._config.likeButtonSelector),this._deleteButton=this._element.querySelector(this._config.deleteButtonSelector),this._likeCounter=this._element.querySelector(this._config.likeCounterSelector)}},{key:"_isLike",value:function(){var t=this;this._likes.find((function(e){return e._id===t._userId}))&&this._likeButton.classList.add(this._config.likeButtonActive)}},{key:"_handleLikeButton",value:function(t){var e=this;this._likes.find((function(t){return t._id===e._userId}))?this._disliker(this._cardId,"/cards/likes",(function(n){e._likeCounter.textContent=n.likes.length,e._likes=n.likes,t.target.classList.remove(e._config.likeButtonActive)})):this._liker(this._cardId,"/cards/likes",(function(n){e._likeCounter.textContent=n.likes.length,e._likes=n.likes,t.target.classList.add(e._config.likeButtonActive)}))}},{key:"_handleDeleteCard",value:function(t){var e=this;this._deletePopup((function(){e._excluder(e._cardId),t.target.parentElement.remove()}))}},{key:"_handleOpenViewerPopup",value:function(){this._renderer(this._cardImage)}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton.addEventListener("click",(function(e){t._handleLikeButton(e)})),this._deleteButton.addEventListener("click",(function(e){t._handleDeleteCard(e)})),this._cardImage.addEventListener("click",(function(){t._handleOpenViewerPopup()}))}},{key:"generateCard",value:function(){return this._createConsts(),this._cardName.textContent=this._name,this._cardImage.setAttribute("src",this._link),this._cardImage.setAttribute("alt",this._name),this._ownerId===this._userId&&this._deleteButton.classList.add(this._config.deleteButtonVisible),this._isLike(),this._likeCounter.textContent=this._likes.length,this._setEventListeners(),this._element}}])&&e(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}(),o=r;function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,c(r.key),r)}}function c(t){var e=function(t,e){if("object"!=i(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==i(e)?e:e+""}var a=function(){return t=function t(e,n,r){var o,i,u,a=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,u=function(){return a._inputList.every((function(t){if(""!=t.value.trim())return t.validity.valid}))},(i=c(i="_allInputsValid"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._formElement=e,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._closeButton=r},(e=[{key:"_createConsts",value:function(){this._formElement=document.querySelector(this._formElement),this._submitButtonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._closeButton=document.querySelector(this._closeButton)}},{key:"_showError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),e.textContent=""}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideError(t):this._showError(t)}},{key:"_toggleButtonState",value:function(){this._allInputsValid(this._inputList)?this._submitButtonElement.classList.remove(this._inactiveButtonClass):this._submitButtonElement.classList.add(this._inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))})),this._closeButton.addEventListener("click",(function(e){t._resetValidation()}))}},{key:"enableValidation",value:function(){var t=this;this._createConsts(),this._formElement.addEventListener("submit",(function(e){e.preventDefault(),setTimeout((function(){t._submitButtonElement.classList.add(t._inactiveButtonClass)}),2e3)})),this._toggleButtonState(),this._setEventListeners()}},{key:"_resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideError(e)}))}}])&&u(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,f(r.key),r)}}function f(t){var e=function(t,e){if("object"!=l(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==l(e)?e:e+""}var p=function(){return t=function t(e){var n,r,o,i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,o=function(t){"Escape"===t.key&&i.close()},(r=f(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popup=document.querySelector(e.popupSelector),this._openClass=e.openClass,this._closeButton=document.querySelector(e.closeButtonSelector)},(e=[{key:"open",value:function(){var t=this;this._popup.classList.add(this._openClass),document.addEventListener("keydown",this._handleEscClose),this._closeButton.addEventListener("click",(function(){t.close()}))}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove(this._openClass)}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){e.target.classList.remove(t._openClass)}))}}])&&s(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,h(r.key),r)}}function h(t){var e=function(t,e){if("object"!=y(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==y(e)?e:e+""}function d(t,e,n){return e=v(e),function(t,e){if(e&&("object"==y(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,_()?Reflect.construct(e,n||[],v(t).constructor):e.apply(t,n))}function _(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(_=function(){return!!t})()}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=v(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},b.apply(null,arguments)}function v(t){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},v(t)}function S(t,e){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},S(t,e)}var g=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=d(this,e,[t]))._closeButton=document.querySelector(t.closeButtonSelector),n._image=document.querySelector(t.viewerImageSelector),n._title=document.querySelector(t.viewerTitleSelector),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&S(t,e)}(e,t),n=e,(r=[{key:"open",value:function(t){this._image.setAttribute("src",t.src),this._image.setAttribute("alt",t.alt),this._title.textContent=t.alt,b(v(e.prototype),"open",this).call(this)}}])&&m(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(p);function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,E(r.key),r)}}function E(t){var e=function(t,e){if("object"!=k(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==k(e)?e:e+""}function j(t,e,n){return e=O(e),function(t,e){if(e&&("object"==k(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,P()?Reflect.construct(e,n||[],O(t).constructor):e.apply(t,n))}function P(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(P=function(){return!!t})()}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=O(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},C.apply(null,arguments)}function O(t){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},O(t)}function B(t,e){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},B(t,e)}var L=function(t){function e(t,n){var r,o=n.submitFunction;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=j(this,e,[t]))._formElement=document.querySelector(t.formElement),r._inputSelector=t.inputSelector,r._submitFunction=o,r._submitButton=r._formElement.querySelector(t.submitButtonSelector),r._buttonText=t.buttonText,r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&B(t,e)}(e,t),n=e,(r=[{key:"_getInputValues",value:function(){var t=this;return this._inputsData={},this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._inputList.forEach((function(e){t._inputsData[e.id]=e.value})),this._inputsData}},{key:"setEventListeners",value:function(){var t=this;C(O(e.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(e){e.preventDefault(),t._data=t._getInputValues(),t._submitFunction(t._data)}))}},{key:"close",value:function(){this._formElement.reset(),C(O(e.prototype),"close",this).call(this)}},{key:"renderSaving",value:function(t){this._submitButton.textContent=t?"Salvando...":this._buttonText}}])&&w(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(p);function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,q(r.key),r)}}function q(t){var e=function(t,e){if("object"!=T(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==T(e)?e:e+""}function x(t,e,n){return e=R(e),function(t,e){if(e&&("object"==T(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,A()?Reflect.construct(e,n||[],R(t).constructor):e.apply(t,n))}function A(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(A=function(){return!!t})()}function R(t){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},R(t)}function U(t,e){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},U(t,e)}var D=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=x(this,e,[t]))._confirmationButton=document.querySelector(t.confirmationButtonSelector),n._buttonText=t.buttonText,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&U(t,e)}(e,t),n=e,(r=[{key:"renderDeleting",value:function(t){this._confirmationButton.textContent=t?"Deletando...":this._buttonText}},{key:"isDelete",value:function(t){this._confirmationButton.addEventListener("click",(function(){t()}))}}])&&I(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(p);function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,N(r.key),r)}}function N(t){var e=function(t,e){if("object"!=z(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==z(e)?e:e+""}var F=function(){return t=function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._container=document.querySelector(n)},(e=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"getItems",value:function(){return this._items}},{key:"setItems",value:function(t){this._items=t}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"itemRenderer",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}}])&&V(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function J(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,G(r.key),r)}}function G(t){var e=function(t,e){if("object"!=H(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==H(e)?e:e+""}var M=function(){return t=function t(e){var n=e.personSelector,r=e.aboutSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=document.querySelector(n),this._about=document.querySelector(r)},(e=[{key:"getUserInfo",value:function(){return this._userInfo={},this._userInfo.name=this._name.textContent,this._userInfo.about=this._about.textContent,this._userInfo}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;this._name.textContent=e,this._about.textContent=n}}])&&J(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function K(t){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},K(t)}function Q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,W(r.key),r)}}function W(t){var e=function(t,e){if("object"!=K(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=K(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==K(e)?e:e+""}var X,Y=function(){return t=function t(e){var n=e.baseURL,r=e.userAuthorization;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseURL=n,this._userAuthorization=r},(e=[{key:"getInitialCards",value:function(t){return fetch("".concat(this._baseURL).concat(t),{method:"GET",headers:{authorization:this._userAuthorization}})}},{key:"addNewCard",value:function(t,e){var n=t.name,r=t.link;return fetch("".concat(this._baseURL).concat(e),{method:"POST",headers:{authorization:this._userAuthorization,"Content-Type":"application/json"},body:JSON.stringify({name:"".concat(n),link:"".concat(r)})})}},{key:"deleteCard",value:function(t,e){return fetch("".concat(this._baseURL).concat(e,"/").concat(t),{method:"DELETE",headers:{authorization:this._userAuthorization}})}},{key:"getUserInfo",value:function(t){return fetch("".concat(this._baseURL).concat(t),{method:"GET",headers:{authorization:this._userAuthorization}})}},{key:"updateUserInfo",value:function(t,e){var n=t.person,r=t.about;return fetch("".concat(this._baseURL).concat(e),{method:"PATCH",headers:{authorization:this._userAuthorization,"Content-Type":"application/json"},body:JSON.stringify({name:"".concat(n),about:"".concat(r)})})}},{key:"updateUserAvatar",value:function(t,e){var n=t.picture;return console.log(n),fetch("".concat(this._baseURL).concat(e),{method:"PATCH",headers:{authorization:this._userAuthorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:"".concat(n)})})}},{key:"like",value:function(t,e){return fetch("".concat(this._baseURL).concat(e,"/").concat(t),{method:"PUT",headers:{authorization:this._userAuthorization}})}},{key:"dislike",value:function(t,e){return fetch("".concat(this._baseURL).concat(e,"/").concat(t),{method:"DELETE",headers:{authorization:this._userAuthorization}})}}])&&Q(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),Z=document.querySelector(".profile__edit-button"),$=document.querySelector(".profile__add-button"),tt=document.querySelector(".profile__picture-edit-button"),et=document.querySelector(".form__input_name"),nt=document.querySelector(".form__input_about"),rt=document.querySelector(".profile__picture"),ot="57ad3ec977745486d8c3e581",it={cardsContainerSelector:".gallery__cards",templateSelector:"#template-cards",cardSelector:".gallery__card",cardNameSelector:".gallery__card-name",cardImageSelector:".gallery__card-image",likeButtonSelector:".gallery__card-like-button",likeButtonActive:"gallery__card-like-button-active",deleteButtonSelector:".gallery__card-delete-button",deleteButtonVisible:"gallery__card-delete-button-visible",likeCounterSelector:".gallery__card-like-counter"},ut={inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button-inactive",inputErrorClass:"form__input_type-error",errorClass:"form__error_visible"},ct=new Y({baseURL:"https://around.nomoreparties.co/v1/web-ptbr-cohort-11",userAuthorization:"3fda8d28-174d-4647-9b4c-9acb9effd1bc"}),at=new g({popupSelector:".viewer",openClass:"viewer_visible",closeButtonSelector:".viewer__close-button",viewerImageSelector:".viewer__image",viewerTitleSelector:".viewer__title"});at.setEventListeners();var lt=new D({popupSelector:".confirmer_image-delete",openClass:"confirmer_visible",closeButtonSelector:".confirmer__image-delete-close-button",confirmationButtonSelector:".confirmer__confirmation-button",buttonText:"Sim"});function st(t){console.log("deletou o card: ".concat(t)),lt.renderDeleting(!0),ct.deleteCard(t,"/cards").then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){console.log("deletou o cartão: ".concat(t))})).catch((function(t){console.log(t)})).finally((function(){lt.renderDeleting(!1),lt.close()}))}function ft(t){lt.open(),lt.isDelete(t)}lt.setEventListeners(),ct.getInitialCards("/cards").then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){(X=new F({items:t,renderer:function(t){var e=new o(t,{config:it,renderer:function(t){at.open(t)},liker:function(t,e,n){ct.like(t,e).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){n(t)})).catch((function(t){console.log(t)}))},disliker:function(t,e,n){ct.dislike(t,e).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){n(t)})).catch((function(t){console.log(t)}))},excluder:st,deletePopup:function(t){ft(t)},userId:ot}),n=e.generateCard();X.addItem(n)}},it.cardsContainerSelector)).itemRenderer()})).catch((function(t){console.log(t)}));var pt=new L({popupSelector:".editor_gallery",openClass:"editor_visible",closeButtonSelector:".editor__gallery-close-button",formElement:".form_gallery",inputSelector:".form__input",submitButtonSelector:".form__submit-button",buttonText:"Criar"},{submitFunction:function(t){pt.renderSaving(!0),ct.addNewCard(t,"/cards").then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){var e=new o(t,{config:it,renderer:function(t){at.open(t)},liker:function(t,e,n){ct.like(t,e).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){n(t)})).catch((function(t){console.log(t)}))},disliker:function(t,e,n){ct.dislike(t,e).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){n(t)})).catch((function(t){console.log(t)}))},excluder:st,deletePopup:function(t){ft(t)},userId:ot}),n=e.generateCard();X.addItem(n)})).catch((function(t){console.log(t)})).finally((function(){pt.renderSaving(!1),pt.close()}))}});pt.setEventListeners(),$.addEventListener("click",(function(){pt.open()}));var yt=new M({personSelector:".profile__name",aboutSelector:".profile__about"});ct.getUserInfo("/users/me").then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){yt.setUserInfo(t),rt.setAttribute("src","".concat(t.avatar))})).catch((function(t){console.log(t)}));var mt=new L({popupSelector:".editor_profile",openClass:"editor_visible",closeButtonSelector:".editor__profile-close-button",formElement:".form_profile",inputSelector:".form__input",submitButtonSelector:".form__submit-button",buttonText:"Salvar"},{submitFunction:function(t){mt.renderSaving(!0),ct.updateUserInfo(t,"/users/me").then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){yt.setUserInfo(t)})).catch((function(t){console.log(t)})).finally((function(){mt.close(),mt.renderSaving(!1)}))}});mt.setEventListeners(),Z.addEventListener("click",(function(){var t=yt.getUserInfo();et.value=t.name,nt.value=t.about,mt.open()}));var ht=new L({popupSelector:".editor_picture",openClass:"editor_visible",closeButtonSelector:".editor__picture-close-button",formElement:".form_picture",inputSelector:".form__input",submitButtonSelector:".form__submit-button",buttonText:"Salvar"},{submitFunction:function(t){ht.renderSaving(!0),ct.updateUserAvatar(t,"/users/me/avatar").then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){rt.setAttribute("src","".concat(t.avatar))})).catch((function(t){console.log(t)})).finally((function(){ht.close(),ht.renderSaving(!1)}))}});ht.setEventListeners(),tt.addEventListener("click",(function(){ht.open()})),new a(".form_profile",ut,".editor__profile-close-button").enableValidation(),new a(".form_gallery",ut,".editor__gallery-close-button").enableValidation(),new a(".form_picture",ut,".editor__picture-close-button").enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,